generator client {
  provider = "prisma-client-js"
  // output   = "./src/generated/prisma"
}

datasource db {
 provider = "postgresql"
 url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique
  firstName  String?
  lastName   String?
  trips      Trip[]
  media      Media[]
  sharedLists SharedList[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Trip {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  name        String
  destination String
  startDate   DateTime
  endDate     DateTime
  itineraries Itinerary[]
  accommodations Accommodation[]
  media       Media[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Itinerary {
  id         String   @id @default(cuid())
  trip       Trip     @relation(fields: [tripId], references: [id])
  tripId     String
  date       DateTime
  title      String
  notes      String?
  activities Activity[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Activity {
  id          String   @id @default(cuid())
  itinerary   Itinerary @relation(fields: [itineraryId], references: [id])
  itineraryId String
  time        String
  name        String
  location    String
  description String?
  link        String?
  media       Media[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Accommodation {
  id        String   @id @default(cuid())
  trip      Trip     @relation(fields: [tripId], references: [id])
  tripId    String
  name      String
  address   String
  checkIn   DateTime
  checkOut  DateTime
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Media {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  trip       Trip?    @relation(fields: [tripId], references: [id])
  tripId     String?
  activity   Activity? @relation(fields: [activityId], references: [id])
  activityId String?
  url        String
  type       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model SharedList {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  name       String
  description String?
  items      ListItem[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ListItem {
  id         String   @id @default(cuid())
  sharedList SharedList @relation(fields: [sharedListId], references: [id])
  sharedListId String
  name       String
  type       String
  location   String
  link       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}